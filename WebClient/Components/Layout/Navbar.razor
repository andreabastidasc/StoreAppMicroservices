@inject IJSRuntime JSRuntime
@inject NavigationManager Navigation
@rendermode InteractiveServer

@if (!IsLoginOrRegisterPage)
{
    <nav class="navbar navbar-expand-lg navbar-light bg-light">
        <div class="container-fluid">
            <NavLink class="navbar-brand" href="/products">My Store</NavLink>

            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav">
                <span class="navbar-toggler-icon"></span>
            </button>

            <div class="collapse navbar-collapse" id="navbarNav">
                <ul class="navbar-nav me-auto mb-2 mb-lg-0">
                    <li class="nav-item">
                        <NavLink class="nav-link" href="/profile">Profile</NavLink>
                    </li>
                    <li class="nav-item">
                        <NavLink class="nav-link" href="/cart">Cart</NavLink>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="#" @onclick="Logout">Logout</a>
                    </li>
                </ul>
            </div>
        </div>
    </nav>
}

@code {
    private bool IsLoginOrRegisterPage =>
        Navigation.Uri.Contains("/login") || Navigation.Uri.EndsWith("/") || Navigation.Uri.Contains("/register");

    private async Task Logout()
    {
        await JSRuntime.InvokeVoidAsync("localStorage.removeItem", "user");
        await JSRuntime.InvokeVoidAsync("localStorage.removeItem", "cart");
        Navigation.NavigateTo("/", true);
    }
}
